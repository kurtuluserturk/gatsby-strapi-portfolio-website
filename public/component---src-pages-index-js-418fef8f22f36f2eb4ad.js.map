{"version":3,"sources":["webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js","webpack:///./src/components/Hero.js","webpack:///./src/constants/services.js","webpack:///./src/components/Services.js","webpack:///./src/components/Jobs.js","webpack:///./src/pages/index.js","webpack:///./src/components/Blog.js","webpack:///./src/components/Blogs.js"],"names":["Project","description","github","title","url","image","stack","index","className","fluid","childImageSharp","map","item","key","id","label","href","target","Projects","projects","showLink","Title","project","to","Hero","file","icon","text","Services","services","service","Jobs","jobs","allStrapiJobs","nodes","React","useState","value","setValue","company","date","position","desc","job","strapiId","onClick","name","query","data","allStrapiProjects","blogs","allStrapiBlogs","Layout","SEO","Blogs","Blog","category","slug","blog"],"mappings":"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","file":"component---src-pages-index-js-418fef8f22f36f2eb4ad.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\n\nconst Project = ({ description, github, title, url, image, stack, index }) => {\n\n  return (\n    <article className=\"project\">\n      <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        <h3>{title || \"defaul title\"}</h3>\n        <p className=\"project-desc\">\n          {description}\n        </p>\n        <div className=\"project-stack\">\n          {stack.map(item => {\n            return <span key={item.id}>{item.label}</span>\n          })}\n        </div>\n        <div className=\"project-links\">\n          <a href={github} target=\"_blank\">\n            <FaGithubSquare className=\"project-icon\" />\n          </a>\n          <a href={url} target=\"_blank\">\n            <FaShareSquare className=\"project-icon\" />\n          </a>\n        </div>\n      </div>\n    </article>\n  )\n}\n\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  github: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n  image: PropTypes.object.isRequired,  // image is an object\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\n\nconst Projects = ({ projects, title, showLink }) => {\n\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          all projects\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport SocialLinks from \"../constants/socialLinks\"\n\nconst query = graphql`\n{\n  file(relativePath: {eq: \"hero-img.png\"}) {\n    childImageSharp {\n      fluid {\n        ...GatsbyImageSharpFluid        \n      }\n    }\n  }\n}\n`\n\nconst Hero = () => {\n  const {\n    file: {\n      childImageSharp: { fluid }\n    }\n  } = useStaticQuery(query)\n\n\n  return <header className=\"hero\">\n    <div className=\"section-center hero-center\">\n      <article className=\"hero-info\">\n        <div>\n          <div className=\"underline\"></div>\n          <h1>I'm Kurtuluş</h1>\n          <h4>Developer & Engineer</h4>\n          <Link to=\"/contact\" className=\"btn\">\n            contact me\n          </Link>\n          <SocialLinks />\n        </div>\n      </article>\n      <Image fluid={fluid} className=\"hero-img\" />\n    </div>\n  </header>\n}\n\nexport default Hero\n","import React from \"react\"\nimport { FaCode, FaSketch, FaGamepad } from \"react-icons/fa\"\n\nexport default [\n  {\n    id: 1,\n    icon: <FaCode className=\"service-icon\" />,\n    title: \"web development\",\n    text: `Client-focused, customer-centric, creating website solutions that deliver tangible business results, I help brands the ever-changing digital landscape.`,\n  },\n  {\n    id: 2,\n    icon: <FaSketch className=\"service-icon\" />,\n    title: \"web design\",\n    text: `I provide UI design & products for web.`,\n  },\n  {\n    id: 3,\n    icon: <FaGamepad className=\"service-icon\" />,\n    title: \"game development\",\n    text: `If there’s one thing more important than passion to a game developer, it’s creativity. Without it, it’s impossible to help create captivating gameplay and worlds for others to enjoy.`,\n  },\n]\n","import React from \"react\"\nimport Title from \"./Title\"\nimport services from \"../constants/services\"\n\nconst Services = () => {\n  return (\n    <section className=\"section bg-grey\">\n      <Title title=\"services\" />\n      <div className=\"section-center services-center\">\n        {services.map(service => {\n          const { id, icon, title, text } = service\n\n          return (\n            <article key={id} className=\"service\">\n              {icon}\n              <h4>{title}</h4>\n              <div className=\"underline\"></div>\n              <p>{text}</p>\n            </article>\n          )\n        })}\n      </div>\n    </section>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport Title from \"./Title\"\nimport { FaAngleDoubleRight } from \"react-icons/fa\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nconst query = graphql`\n  {\n    allStrapiJobs(sort: {fields: strapiId, order: DESC}) {\n      nodes {\n        strapiId\n        company\n        date\n        position\n        desc {\n          id\n          name\n        }\n      }\n    }\n  }\n`\n\nconst Jobs = () => {\n\n  const data = useStaticQuery(query)\n  const { allStrapiJobs: { nodes: jobs } } = data   // jobs is given alias\n  const [value, setValue] = React.useState(0)\n  const { company, date, position, desc } = jobs[value]\n\n  return (\n    <section className=\"section jobs\">\n      <Title title=\"experience\" />\n      <div className=\"jobs-center\">\n\n        {/* btn container */}\n        <div className=\"btn-container\">\n          {jobs.map((job, index) => {\n            return <button\n              key={job.strapiId}\n              onClick={() => setValue(index)}   // We change our job dynamically in here\n              className={`job-btn ${index === value && \"active-btn\"}`}\n            >\n              {job.company}\n            </button>\n          })}\n        </div>\n\n        {/* job info */}\n        <article className=\"job-info\">\n          <h3>{position}</h3>\n          <h4>{company}</h4>\n          <p className=\"job-date\">{date}</p>\n          {desc.map((item) => {\n            return <div key={item.id} className=\"job-desc\">\n              <FaAngleDoubleRight className=\"job-icon\"></FaAngleDoubleRight>\n              <p>{item.name}</p>\n            </div>\n          })}\n        </article>\n      </div>\n      <Link to=\"/about\" className=\"btn center-btn\">\n        more info\n      </Link>\n    </section>\n  )\n}\n\nexport default Jobs\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Hero from \"../components/Hero\"\nimport Services from \"../components/Services\"\nimport Jobs from \"../components/Jobs\"\nimport Projects from \"../components/Projects\"\nimport Blogs from \"../components/Blogs\"\nimport SEO from \"../components/SEO\"\n\nexport default ({ data }) => {  // data comes from graphql query\n\n  // This destructing is the same pages/projects. We can compare them to understand.\n  const {\n    allStrapiProjects: { nodes: projects },\n    allStrapiBlogs: { nodes: blogs }\n  } = data\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" description=\"this is home page\" />\n      <Hero />\n      <Services />\n      <Jobs />\n      <Projects projects={projects} title=\"featured projects\" showLink />\n      <Blogs blogs={blogs} title=\"latest blog\" showLink />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {   \n\n    allStrapiProjects(filter: {featured: {eq: true}}) {\n      nodes {\n        description\n        github\n        id\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          label\n        }\n      }\n    }\n\n    allStrapiBlogs(sort: {fields: date, order: DESC}, limit: 3) {\n      nodes {\n        slug\n        content\n        desc\n        date(formatString: \"MMMM Do, YYYY\")\n        id\n        title\n        category\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { Link } from \"gatsby\"\n\nconst Blog = ({ id, title, image, date, category, slug, desc }) => {\n  return (\n    <Link to={`/blogs/${slug}`} className=\"blog\" key={id}>\n      <article>\n        {\n          image && (\n            <Image fluid={image.childImageSharp.fluid} className=\"blog-img\" />\n          )}\n        <div className=\"blog-card\">\n          <h4>{title}</h4>\n          <p>{desc}</p>\n          <div className=\"blog-footer\">\n            <p>{category}</p>\n            <p>{date}</p>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nBlog.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  slug: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n}\n\nexport default Blog\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Blog from \"./Blog\"\nimport { Link } from \"gatsby\"\n\nconst Blogs = ({ blogs, title, showLink }) => {\n  return (\n    <section className=\"section\">\n      <Title title={title} />\n      <div className=\"section-center blogs-center\">\n        {blogs.map(blog => {\n          return <Blog key={blog.id} {...blog} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/blog\" className=\"btn center-btn\">\n          blog\n        </Link>\n      )}\n    </section>\n  )\n}\nexport default Blogs\n"],"sourceRoot":""}